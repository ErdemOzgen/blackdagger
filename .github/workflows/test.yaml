name: Test
on: [push, pull_request]
jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Installing protoc-gen-go
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Installing swagger
        run: |
          go install github.com/go-swagger/go-swagger/cmd/swagger@latest

      - name: Set up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up yarn
        run: npm install --global yarn

      - name: Check out code
        uses: actions/checkout@v3

      - name: Yarn install
        run: yarn install
        working-directory: ui

      - name: Build web UI
        run: yarn build
        working-directory: ui

      - name: Copy web assets
        run: |
          cp ui/dist/*.js ./service/frontend/assets/
          cp ui/dist/*.woff ./service/frontend/assets/
          cp ui/dist/*.woff2 ./service/frontend/assets/

      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          mkdir ./bin && protoc -I=./ --go_out=./internal ./internal/proto/*.proto  && go build -o ./bin/blackdagger .

      - name: Test
        run: |
          go test -v -coverprofile="coverage.txt" -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v2
